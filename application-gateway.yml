spring:
  cloud:
    gateway:
      routes:
        - id: employee-route
          uri: lb://msemployee
          predicates:
            - Path=/employee/**
          filters:
            - AddRequestHeader=X-Tenant,acme
            - AddResponseHeader=X-Genre,fantasy
            - name: Retry #it is dangerous for post bcause it may do same tusk multiple times.
              args:
                retries: 1
                methods: GET
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: employeeService
                fallbackUri: forward:/employee-fallback/
        - id: project-route
          uri: lb://msproject
          predicates:
            - Path=/projects/**
          filters:
            - AddRequestHeader=X-Tenant,acme
            - AddResponseHeader=X-Genre,fantasy
            - name: Retry #it is dangerous for post bcause it may do same tusk multiple times.
              args:
                retries: 1
                methods: GET
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args:
                name: projectService
                fallbackUri: forward:/project-fallback/
      default-filters:
        - TokenRelay #pass access_token to resource servers/microservices
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID:ms_client}
            client-secret: ${CLIENT_SECRET:secret}
            scopes: ${CLIENT_SCOPES:openid}
        provider:
          keycloak:
            issuer-uri: http://${KEYCLOAK_HOST:192.168.1.4}:${KEYCLOAK_PORT:8080}/realms/${KEYCLOAK_REALMS:ms}

  session:
    store-type: redis
  redis:
    host: ${REDIS_HOST:192.168.1.4}
    port: 6379

resilience4j:
  circuitbreaker:
    instances:
      employeeService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
      projectService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
  timelimiter:
    instances:
      employeeService:
        timeoutDuration: 2s
      projectService:
        timeoutDuration: 2s
